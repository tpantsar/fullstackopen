services:
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./todo-backend/redis_data:/data

  backend:
    image: todo-backend-dev
    container_name: todo-backend-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    ports:
      - 3000:3000
    environment:
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./todo-backend:/usr/src/app # Build volume in the backend directory
    depends_on:
      - mongo
      - redis

  frontend:
    image: todo-frontend-dev
    container_name: todo-frontend-dev
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
    ports:
      - 5173:5173
    volumes:
      - ./todo-frontend:/usr/src/app # Build volume in the frontend directory
    environment:
      - PORT=5173
      - VITE_BACKEND_URL=http://localhost:3000/api
    depends_on:
      - backend

  nginx:
    image: nginx
    container_name: reverse-proxy
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    depends_on: # Wait for the backend and frontend to be ready
      - backend
      - frontend
